// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: proto/estate.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EstatePro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstatePro) Reset() {
	*x = EstatePro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstatePro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstatePro) ProtoMessage() {}

func (x *EstatePro) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstatePro.ProtoReflect.Descriptor instead.
func (*EstatePro) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{0}
}

func (x *EstatePro) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstatePro) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstatePro) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstatePro) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstatePro) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstatePro) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstatePro) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstatePro) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstatePro) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstatePro) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

// estate id로 조회
type EstateIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId string `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
}

func (x *EstateIdRequest) Reset() {
	*x = EstateIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateIdRequest) ProtoMessage() {}

func (x *EstateIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateIdRequest.ProtoReflect.Descriptor instead.
func (*EstateIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{1}
}

func (x *EstateIdRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

type EstateInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstateInfoResponse) Reset() {
	*x = EstateInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateInfoResponse) ProtoMessage() {}

func (x *EstateInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateInfoResponse.ProtoReflect.Descriptor instead.
func (*EstateInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{2}
}

func (x *EstateInfoResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstateInfoResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstateInfoResponse) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstateInfoResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstateInfoResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstateInfoResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstateInfoResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstateInfoResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstateInfoResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstateInfoResponse) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

// estate 모두 조회
type EstateAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EstateAllRequest) Reset() {
	*x = EstateAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateAllRequest) ProtoMessage() {}

func (x *EstateAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateAllRequest.ProtoReflect.Descriptor instead.
func (*EstateAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{3}
}

type EstateAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estates []*EstatePro `protobuf:"bytes,1,rep,name=estates,proto3" json:"estates,omitempty"`
}

func (x *EstateAllResponse) Reset() {
	*x = EstateAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateAllResponse) ProtoMessage() {}

func (x *EstateAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateAllResponse.ProtoReflect.Descriptor instead.
func (*EstateAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{4}
}

func (x *EstateAllResponse) GetEstates() []*EstatePro {
	if x != nil {
		return x.Estates
	}
	return nil
}

// estate insert
type EstateSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstateSaveRequest) Reset() {
	*x = EstateSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateSaveRequest) ProtoMessage() {}

func (x *EstateSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateSaveRequest.ProtoReflect.Descriptor instead.
func (*EstateSaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{5}
}

func (x *EstateSaveRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstateSaveRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstateSaveRequest) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstateSaveRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstateSaveRequest) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstateSaveRequest) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstateSaveRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstateSaveRequest) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstateSaveRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstateSaveRequest) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

type EstateSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstateSaveResponse) Reset() {
	*x = EstateSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateSaveResponse) ProtoMessage() {}

func (x *EstateSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateSaveResponse.ProtoReflect.Descriptor instead.
func (*EstateSaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{6}
}

func (x *EstateSaveResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstateSaveResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstateSaveResponse) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstateSaveResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstateSaveResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstateSaveResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstateSaveResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstateSaveResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstateSaveResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstateSaveResponse) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

// estate 업데이트
type EstateUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstateUpdateRequest) Reset() {
	*x = EstateUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateUpdateRequest) ProtoMessage() {}

func (x *EstateUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateUpdateRequest.ProtoReflect.Descriptor instead.
func (*EstateUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{7}
}

func (x *EstateUpdateRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstateUpdateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstateUpdateRequest) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstateUpdateRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstateUpdateRequest) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstateUpdateRequest) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstateUpdateRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstateUpdateRequest) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstateUpdateRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstateUpdateRequest) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

type EstateUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId      string  `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Location      string  `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	EstateType    string  `protobuf:"bytes,3,opt,name=estateType,proto3" json:"estateType,omitempty"`
	Direction     string  `protobuf:"bytes,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor    int32   `protobuf:"varint,5,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor int32   `protobuf:"varint,6,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	Room          int32   `protobuf:"varint,7,opt,name=room,proto3" json:"room,omitempty"`
	Toilet        int32   `protobuf:"varint,8,opt,name=toilet,proto3" json:"toilet,omitempty"`
	Hashtag       string  `protobuf:"bytes,9,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2            float64 `protobuf:"fixed64,10,opt,name=m2,proto3" json:"m2,omitempty"`
}

func (x *EstateUpdateResponse) Reset() {
	*x = EstateUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateUpdateResponse) ProtoMessage() {}

func (x *EstateUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateUpdateResponse.ProtoReflect.Descriptor instead.
func (*EstateUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{8}
}

func (x *EstateUpdateResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *EstateUpdateResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EstateUpdateResponse) GetEstateType() string {
	if x != nil {
		return x.EstateType
	}
	return ""
}

func (x *EstateUpdateResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *EstateUpdateResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *EstateUpdateResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *EstateUpdateResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *EstateUpdateResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *EstateUpdateResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *EstateUpdateResponse) GetM2() float64 {
	if x != nil {
		return x.M2
	}
	return 0
}

// estate 삭제
type EstateDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId string `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
}

func (x *EstateDeleteRequest) Reset() {
	*x = EstateDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateDeleteRequest) ProtoMessage() {}

func (x *EstateDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateDeleteRequest.ProtoReflect.Descriptor instead.
func (*EstateDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{9}
}

func (x *EstateDeleteRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

type EstateDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *EstateDeleteResponse) Reset() {
	*x = EstateDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_estate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstateDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstateDeleteResponse) ProtoMessage() {}

func (x *EstateDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_estate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstateDeleteResponse.ProtoReflect.Descriptor instead.
func (*EstateDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_estate_proto_rawDescGZIP(), []int{10}
}

func (x *EstateDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_estate_proto protoreflect.FileDescriptor

var file_proto_estate_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a,
	0x09, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x69, 0x6c, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x6d, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x6d, 0x32, 0x22, 0x2d, 0x0a, 0x0f,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x12,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x6d, 0x32, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x11, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x52, 0x07, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xa5, 0x02, 0x0a,
	0x11, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x6d, 0x32, 0x22, 0xa6, 0x02, 0x0a, 0x12, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69,
	0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x6d, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x6d, 0x32, 0x22, 0xa7, 0x02,
	0x0a, 0x13, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x02, 0x6d, 0x32, 0x22, 0xa8, 0x02, 0x0a, 0x14, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68,
	0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74,
	0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02,
	0x6d, 0x32, 0x22, 0x31, 0x0a, 0x13, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x8f, 0x04, 0x0a, 0x12, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68,
	0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x45, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x64, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62,
	0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x7b,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x7d, 0x42, 0x79, 0x0a, 0x0d, 0x6a, 0x61, 0x76,
	0x61, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x42, 0x0b, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x1b, 0x62, 0x75, 0x66, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x77, 0x61, 0x66, 0x2f, 0x69, 0x64, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0xca, 0x02, 0x08, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x70, 0x62, 0xe2, 0x02, 0x14, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x62, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_estate_proto_rawDescOnce sync.Once
	file_proto_estate_proto_rawDescData = file_proto_estate_proto_rawDesc
)

func file_proto_estate_proto_rawDescGZIP() []byte {
	file_proto_estate_proto_rawDescOnce.Do(func() {
		file_proto_estate_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_estate_proto_rawDescData)
	})
	return file_proto_estate_proto_rawDescData
}

var file_proto_estate_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_estate_proto_goTypes = []interface{}{
	(*EstatePro)(nil),            // 0: estatepb.EstatePro
	(*EstateIdRequest)(nil),      // 1: estatepb.EstateIdRequest
	(*EstateInfoResponse)(nil),   // 2: estatepb.EstateInfoResponse
	(*EstateAllRequest)(nil),     // 3: estatepb.EstateAllRequest
	(*EstateAllResponse)(nil),    // 4: estatepb.EstateAllResponse
	(*EstateSaveRequest)(nil),    // 5: estatepb.EstateSaveRequest
	(*EstateSaveResponse)(nil),   // 6: estatepb.EstateSaveResponse
	(*EstateUpdateRequest)(nil),  // 7: estatepb.EstateUpdateRequest
	(*EstateUpdateResponse)(nil), // 8: estatepb.EstateUpdateResponse
	(*EstateDeleteRequest)(nil),  // 9: estatepb.EstateDeleteRequest
	(*EstateDeleteResponse)(nil), // 10: estatepb.EstateDeleteResponse
}
var file_proto_estate_proto_depIdxs = []int32{
	0,  // 0: estatepb.EstateAllResponse.estates:type_name -> estatepb.EstatePro
	1,  // 1: estatepb.EstateProtoService.FindEstateInfo:input_type -> estatepb.EstateIdRequest
	3,  // 2: estatepb.EstateProtoService.GetEstateAll:input_type -> estatepb.EstateAllRequest
	5,  // 3: estatepb.EstateProtoService.SaveEstate:input_type -> estatepb.EstateSaveRequest
	7,  // 4: estatepb.EstateProtoService.UpdateEstate:input_type -> estatepb.EstateUpdateRequest
	9,  // 5: estatepb.EstateProtoService.DeleteEstate:input_type -> estatepb.EstateDeleteRequest
	2,  // 6: estatepb.EstateProtoService.FindEstateInfo:output_type -> estatepb.EstateInfoResponse
	4,  // 7: estatepb.EstateProtoService.GetEstateAll:output_type -> estatepb.EstateAllResponse
	6,  // 8: estatepb.EstateProtoService.SaveEstate:output_type -> estatepb.EstateSaveResponse
	8,  // 9: estatepb.EstateProtoService.UpdateEstate:output_type -> estatepb.EstateUpdateResponse
	10, // 10: estatepb.EstateProtoService.DeleteEstate:output_type -> estatepb.EstateDeleteResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_estate_proto_init() }
func file_proto_estate_proto_init() {
	if File_proto_estate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_estate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstatePro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_estate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstateDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_estate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_estate_proto_goTypes,
		DependencyIndexes: file_proto_estate_proto_depIdxs,
		MessageInfos:      file_proto_estate_proto_msgTypes,
	}.Build()
	File_proto_estate_proto = out.File
	file_proto_estate_proto_rawDesc = nil
	file_proto_estate_proto_goTypes = nil
	file_proto_estate_proto_depIdxs = nil
}
