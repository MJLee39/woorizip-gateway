// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: proto/estate.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	EstateProtoService_FindEstateInfo_FullMethodName = "/estatepb.EstateProtoService/FindEstateInfo"
	EstateProtoService_GetEstateAll_FullMethodName   = "/estatepb.EstateProtoService/GetEstateAll"
	EstateProtoService_SaveEstate_FullMethodName     = "/estatepb.EstateProtoService/SaveEstate"
	EstateProtoService_UpdateEstate_FullMethodName   = "/estatepb.EstateProtoService/UpdateEstate"
	EstateProtoService_DeleteEstate_FullMethodName   = "/estatepb.EstateProtoService/DeleteEstate"
)

// EstateProtoServiceClient is the client API for EstateProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EstateProtoServiceClient interface {
	FindEstateInfo(ctx context.Context, in *EstateIdRequest, opts ...grpc.CallOption) (*EstateInfoResponse, error)
	GetEstateAll(ctx context.Context, in *EstateAllRequest, opts ...grpc.CallOption) (*EstateAllResponse, error)
	SaveEstate(ctx context.Context, in *EstateSaveRequest, opts ...grpc.CallOption) (*EstateSaveResponse, error)
	UpdateEstate(ctx context.Context, in *EstateUpdateRequest, opts ...grpc.CallOption) (*EstateUpdateResponse, error)
	DeleteEstate(ctx context.Context, in *EstateDeleteRequest, opts ...grpc.CallOption) (*EstateDeleteResponse, error)
}

type estateProtoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEstateProtoServiceClient(cc grpc.ClientConnInterface) EstateProtoServiceClient {
	return &estateProtoServiceClient{cc}
}

func (c *estateProtoServiceClient) FindEstateInfo(ctx context.Context, in *EstateIdRequest, opts ...grpc.CallOption) (*EstateInfoResponse, error) {
	out := new(EstateInfoResponse)
	err := c.cc.Invoke(ctx, EstateProtoService_FindEstateInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estateProtoServiceClient) GetEstateAll(ctx context.Context, in *EstateAllRequest, opts ...grpc.CallOption) (*EstateAllResponse, error) {
	out := new(EstateAllResponse)
	err := c.cc.Invoke(ctx, EstateProtoService_GetEstateAll_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estateProtoServiceClient) SaveEstate(ctx context.Context, in *EstateSaveRequest, opts ...grpc.CallOption) (*EstateSaveResponse, error) {
	out := new(EstateSaveResponse)
	err := c.cc.Invoke(ctx, EstateProtoService_SaveEstate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estateProtoServiceClient) UpdateEstate(ctx context.Context, in *EstateUpdateRequest, opts ...grpc.CallOption) (*EstateUpdateResponse, error) {
	out := new(EstateUpdateResponse)
	err := c.cc.Invoke(ctx, EstateProtoService_UpdateEstate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estateProtoServiceClient) DeleteEstate(ctx context.Context, in *EstateDeleteRequest, opts ...grpc.CallOption) (*EstateDeleteResponse, error) {
	out := new(EstateDeleteResponse)
	err := c.cc.Invoke(ctx, EstateProtoService_DeleteEstate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EstateProtoServiceServer is the server API for EstateProtoService service.
// All implementations must embed UnimplementedEstateProtoServiceServer
// for forward compatibility
type EstateProtoServiceServer interface {
	FindEstateInfo(context.Context, *EstateIdRequest) (*EstateInfoResponse, error)
	GetEstateAll(context.Context, *EstateAllRequest) (*EstateAllResponse, error)
	SaveEstate(context.Context, *EstateSaveRequest) (*EstateSaveResponse, error)
	UpdateEstate(context.Context, *EstateUpdateRequest) (*EstateUpdateResponse, error)
	DeleteEstate(context.Context, *EstateDeleteRequest) (*EstateDeleteResponse, error)
	mustEmbedUnimplementedEstateProtoServiceServer()
}

// UnimplementedEstateProtoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedEstateProtoServiceServer struct {
}

func (UnimplementedEstateProtoServiceServer) FindEstateInfo(context.Context, *EstateIdRequest) (*EstateInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindEstateInfo not implemented")
}
func (UnimplementedEstateProtoServiceServer) GetEstateAll(context.Context, *EstateAllRequest) (*EstateAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstateAll not implemented")
}
func (UnimplementedEstateProtoServiceServer) SaveEstate(context.Context, *EstateSaveRequest) (*EstateSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveEstate not implemented")
}
func (UnimplementedEstateProtoServiceServer) UpdateEstate(context.Context, *EstateUpdateRequest) (*EstateUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEstate not implemented")
}
func (UnimplementedEstateProtoServiceServer) DeleteEstate(context.Context, *EstateDeleteRequest) (*EstateDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEstate not implemented")
}
func (UnimplementedEstateProtoServiceServer) mustEmbedUnimplementedEstateProtoServiceServer() {}

// UnsafeEstateProtoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EstateProtoServiceServer will
// result in compilation errors.
type UnsafeEstateProtoServiceServer interface {
	mustEmbedUnimplementedEstateProtoServiceServer()
}

func RegisterEstateProtoServiceServer(s grpc.ServiceRegistrar, srv EstateProtoServiceServer) {
	s.RegisterService(&EstateProtoService_ServiceDesc, srv)
}

func _EstateProtoService_FindEstateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstateIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstateProtoServiceServer).FindEstateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EstateProtoService_FindEstateInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstateProtoServiceServer).FindEstateInfo(ctx, req.(*EstateIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstateProtoService_GetEstateAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstateAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstateProtoServiceServer).GetEstateAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EstateProtoService_GetEstateAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstateProtoServiceServer).GetEstateAll(ctx, req.(*EstateAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstateProtoService_SaveEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstateSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstateProtoServiceServer).SaveEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EstateProtoService_SaveEstate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstateProtoServiceServer).SaveEstate(ctx, req.(*EstateSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstateProtoService_UpdateEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstateUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstateProtoServiceServer).UpdateEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EstateProtoService_UpdateEstate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstateProtoServiceServer).UpdateEstate(ctx, req.(*EstateUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstateProtoService_DeleteEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstateDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstateProtoServiceServer).DeleteEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EstateProtoService_DeleteEstate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstateProtoServiceServer).DeleteEstate(ctx, req.(*EstateDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EstateProtoService_ServiceDesc is the grpc.ServiceDesc for EstateProtoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EstateProtoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "estatepb.EstateProtoService",
	HandlerType: (*EstateProtoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindEstateInfo",
			Handler:    _EstateProtoService_FindEstateInfo_Handler,
		},
		{
			MethodName: "GetEstateAll",
			Handler:    _EstateProtoService_GetEstateAll_Handler,
		},
		{
			MethodName: "SaveEstate",
			Handler:    _EstateProtoService_SaveEstate_Handler,
		},
		{
			MethodName: "UpdateEstate",
			Handler:    _EstateProtoService_UpdateEstate_Handler,
		},
		{
			MethodName: "DeleteEstate",
			Handler:    _EstateProtoService_DeleteEstate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/estate.proto",
}
