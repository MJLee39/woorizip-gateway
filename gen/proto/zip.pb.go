// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: proto/zip.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Zip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachments    string  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,4,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,5,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,7,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,8,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,9,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,12,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,13,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,14,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,16,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,17,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,18,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,19,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,20,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,21,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *Zip) Reset() {
	*x = Zip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zip) ProtoMessage() {}

func (x *Zip) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zip.ProtoReflect.Descriptor instead.
func (*Zip) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{0}
}

func (x *Zip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Zip) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *Zip) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Zip) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *Zip) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *Zip) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Zip) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *Zip) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *Zip) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *Zip) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *Zip) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Zip) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *Zip) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *Zip) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *Zip) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Zip) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *Zip) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Zip) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Zip) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *Zip) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *Zip) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

// 단일 조회
type ZipIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ZipIdRequest) Reset() {
	*x = ZipIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipIdRequest) ProtoMessage() {}

func (x *ZipIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipIdRequest.ProtoReflect.Descriptor instead.
func (*ZipIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{1}
}

func (x *ZipIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ZipIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachments    string  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,4,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,5,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,7,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,8,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,9,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,12,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,13,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,14,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,16,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,17,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,18,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,19,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,20,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,21,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *ZipIdResponse) Reset() {
	*x = ZipIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipIdResponse) ProtoMessage() {}

func (x *ZipIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipIdResponse.ProtoReflect.Descriptor instead.
func (*ZipIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{2}
}

func (x *ZipIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZipIdResponse) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *ZipIdResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ZipIdResponse) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *ZipIdResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *ZipIdResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ZipIdResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *ZipIdResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *ZipIdResponse) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ZipIdResponse) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *ZipIdResponse) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ZipIdResponse) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ZipIdResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *ZipIdResponse) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *ZipIdResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipIdResponse) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *ZipIdResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ZipIdResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *ZipIdResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *ZipIdResponse) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *ZipIdResponse) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

// 모두 조회
type ZipAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZipAllRequest) Reset() {
	*x = ZipAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipAllRequest) ProtoMessage() {}

func (x *ZipAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipAllRequest.ProtoReflect.Descriptor instead.
func (*ZipAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{3}
}

type ZipAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipAllResponse) Reset() {
	*x = ZipAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipAllResponse) ProtoMessage() {}

func (x *ZipAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipAllResponse.ProtoReflect.Descriptor instead.
func (*ZipAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{4}
}

func (x *ZipAllResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

// public 모두 조회
type ZipShowYesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZipShowYesRequest) Reset() {
	*x = ZipShowYesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipShowYesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipShowYesRequest) ProtoMessage() {}

func (x *ZipShowYesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipShowYesRequest.ProtoReflect.Descriptor instead.
func (*ZipShowYesRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{5}
}

type ZipShowYesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipShowYesResponse) Reset() {
	*x = ZipShowYesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipShowYesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipShowYesResponse) ProtoMessage() {}

func (x *ZipShowYesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipShowYesResponse.ProtoReflect.Descriptor instead.
func (*ZipShowYesResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{6}
}

func (x *ZipShowYesResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

// private 모두 조회
type ZipShowNoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZipShowNoRequest) Reset() {
	*x = ZipShowNoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipShowNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipShowNoRequest) ProtoMessage() {}

func (x *ZipShowNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipShowNoRequest.ProtoReflect.Descriptor instead.
func (*ZipShowNoRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{7}
}

type ZipShowNoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipShowNoResponse) Reset() {
	*x = ZipShowNoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipShowNoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipShowNoResponse) ProtoMessage() {}

func (x *ZipShowNoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipShowNoResponse.ProtoReflect.Descriptor instead.
func (*ZipShowNoResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{8}
}

func (x *ZipShowNoResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

// 중개사id로 zip 조회
type ZipAgentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId string `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
}

func (x *ZipAgentIdRequest) Reset() {
	*x = ZipAgentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipAgentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipAgentIdRequest) ProtoMessage() {}

func (x *ZipAgentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipAgentIdRequest.ProtoReflect.Descriptor instead.
func (*ZipAgentIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{9}
}

func (x *ZipAgentIdRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type ZipAgentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipAgentIdResponse) Reset() {
	*x = ZipAgentIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipAgentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipAgentIdResponse) ProtoMessage() {}

func (x *ZipAgentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipAgentIdResponse.ProtoReflect.Descriptor instead.
func (*ZipAgentIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{10}
}

func (x *ZipAgentIdResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

// insert 집
type ZipInsertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachments    string  `protobuf:"bytes,1,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,3,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,4,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,6,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,7,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,8,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,9,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,10,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,11,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,12,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,13,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,15,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,16,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,17,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,18,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,19,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,20,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *ZipInsertRequest) Reset() {
	*x = ZipInsertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipInsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipInsertRequest) ProtoMessage() {}

func (x *ZipInsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipInsertRequest.ProtoReflect.Descriptor instead.
func (*ZipInsertRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{11}
}

func (x *ZipInsertRequest) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *ZipInsertRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ZipInsertRequest) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *ZipInsertRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *ZipInsertRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ZipInsertRequest) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *ZipInsertRequest) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *ZipInsertRequest) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ZipInsertRequest) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *ZipInsertRequest) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ZipInsertRequest) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ZipInsertRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *ZipInsertRequest) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *ZipInsertRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipInsertRequest) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *ZipInsertRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ZipInsertRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *ZipInsertRequest) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *ZipInsertRequest) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *ZipInsertRequest) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

type ZipInsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachments    string  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,4,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,5,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,7,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,8,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,9,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,12,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,13,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,14,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,16,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,17,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,18,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,19,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,20,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,21,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *ZipInsertResponse) Reset() {
	*x = ZipInsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipInsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipInsertResponse) ProtoMessage() {}

func (x *ZipInsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipInsertResponse.ProtoReflect.Descriptor instead.
func (*ZipInsertResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{12}
}

func (x *ZipInsertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZipInsertResponse) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *ZipInsertResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ZipInsertResponse) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *ZipInsertResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *ZipInsertResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ZipInsertResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *ZipInsertResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *ZipInsertResponse) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ZipInsertResponse) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *ZipInsertResponse) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ZipInsertResponse) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ZipInsertResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *ZipInsertResponse) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *ZipInsertResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipInsertResponse) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *ZipInsertResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ZipInsertResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *ZipInsertResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *ZipInsertResponse) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *ZipInsertResponse) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

// update 집
type ZipUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachments    string  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,4,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,5,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,7,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,8,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,9,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,12,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,13,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,14,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,16,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,17,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,18,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,19,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,20,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,21,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *ZipUpdateRequest) Reset() {
	*x = ZipUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipUpdateRequest) ProtoMessage() {}

func (x *ZipUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipUpdateRequest.ProtoReflect.Descriptor instead.
func (*ZipUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{13}
}

func (x *ZipUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZipUpdateRequest) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *ZipUpdateRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ZipUpdateRequest) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *ZipUpdateRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *ZipUpdateRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ZipUpdateRequest) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *ZipUpdateRequest) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *ZipUpdateRequest) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ZipUpdateRequest) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *ZipUpdateRequest) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ZipUpdateRequest) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ZipUpdateRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *ZipUpdateRequest) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *ZipUpdateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipUpdateRequest) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *ZipUpdateRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ZipUpdateRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *ZipUpdateRequest) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *ZipUpdateRequest) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *ZipUpdateRequest) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

type ZipUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attachments    string  `protobuf:"bytes,2,opt,name=attachments,proto3" json:"attachments,omitempty"`
	AgentId        string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	CheckedAt      string  `protobuf:"bytes,4,opt,name=checkedAt,proto3" json:"checkedAt,omitempty"`
	EstateId       string  `protobuf:"bytes,5,opt,name=estateId,proto3" json:"estateId,omitempty"`
	Direction      string  `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TotalFloor     int32   `protobuf:"varint,7,opt,name=totalFloor,proto3" json:"totalFloor,omitempty"`
	BuildingFloor  int32   `protobuf:"varint,8,opt,name=buildingFloor,proto3" json:"buildingFloor,omitempty"`
	BuildingType   string  `protobuf:"bytes,9,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
	Deposit        int32   `protobuf:"varint,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee            int32   `protobuf:"varint,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Available      string  `protobuf:"bytes,12,opt,name=available,proto3" json:"available,omitempty"`
	Hashtag        string  `protobuf:"bytes,13,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	M2             float32 `protobuf:"fixed32,14,opt,name=m2,proto3" json:"m2,omitempty"`
	Location       string  `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	ShowYes        string  `protobuf:"bytes,16,opt,name=showYes,proto3" json:"showYes,omitempty"`
	Note           string  `protobuf:"bytes,17,opt,name=note,proto3" json:"note,omitempty"`
	Room           int32   `protobuf:"varint,18,opt,name=room,proto3" json:"room,omitempty"`
	Toilet         int32   `protobuf:"varint,19,opt,name=toilet,proto3" json:"toilet,omitempty"`
	MaintenanceFee float32 `protobuf:"fixed32,20,opt,name=maintenanceFee,proto3" json:"maintenanceFee,omitempty"`
	Premium        string  `protobuf:"bytes,21,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *ZipUpdateResponse) Reset() {
	*x = ZipUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipUpdateResponse) ProtoMessage() {}

func (x *ZipUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipUpdateResponse.ProtoReflect.Descriptor instead.
func (*ZipUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{14}
}

func (x *ZipUpdateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZipUpdateResponse) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *ZipUpdateResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ZipUpdateResponse) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *ZipUpdateResponse) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

func (x *ZipUpdateResponse) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ZipUpdateResponse) GetTotalFloor() int32 {
	if x != nil {
		return x.TotalFloor
	}
	return 0
}

func (x *ZipUpdateResponse) GetBuildingFloor() int32 {
	if x != nil {
		return x.BuildingFloor
	}
	return 0
}

func (x *ZipUpdateResponse) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ZipUpdateResponse) GetDeposit() int32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *ZipUpdateResponse) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *ZipUpdateResponse) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *ZipUpdateResponse) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *ZipUpdateResponse) GetM2() float32 {
	if x != nil {
		return x.M2
	}
	return 0
}

func (x *ZipUpdateResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipUpdateResponse) GetShowYes() string {
	if x != nil {
		return x.ShowYes
	}
	return ""
}

func (x *ZipUpdateResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ZipUpdateResponse) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *ZipUpdateResponse) GetToilet() int32 {
	if x != nil {
		return x.Toilet
	}
	return 0
}

func (x *ZipUpdateResponse) GetMaintenanceFee() float32 {
	if x != nil {
		return x.MaintenanceFee
	}
	return 0
}

func (x *ZipUpdateResponse) GetPremium() string {
	if x != nil {
		return x.Premium
	}
	return ""
}

// delete 집
type ZipDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ZipDeleteRequest) Reset() {
	*x = ZipDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipDeleteRequest) ProtoMessage() {}

func (x *ZipDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipDeleteRequest.ProtoReflect.Descriptor instead.
func (*ZipDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{15}
}

func (x *ZipDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ZipDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ZipDeleteResponse) Reset() {
	*x = ZipDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipDeleteResponse) ProtoMessage() {}

func (x *ZipDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipDeleteResponse.ProtoReflect.Descriptor instead.
func (*ZipDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{16}
}

func (x *ZipDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 검색
type ZipSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Deposit      string `protobuf:"bytes,2,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Fee          string `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	BuildingType string `protobuf:"bytes,4,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
}

func (x *ZipSearchRequest) Reset() {
	*x = ZipSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipSearchRequest) ProtoMessage() {}

func (x *ZipSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipSearchRequest.ProtoReflect.Descriptor instead.
func (*ZipSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{17}
}

func (x *ZipSearchRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ZipSearchRequest) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *ZipSearchRequest) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *ZipSearchRequest) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

type ZipSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipSearchResponse) Reset() {
	*x = ZipSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipSearchResponse) ProtoMessage() {}

func (x *ZipSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipSearchResponse.ProtoReflect.Descriptor instead.
func (*ZipSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{18}
}

func (x *ZipSearchResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

// estateid로 zip찾기
type ZipEsateIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId string `protobuf:"bytes,1,opt,name=estateId,proto3" json:"estateId,omitempty"`
}

func (x *ZipEsateIdRequest) Reset() {
	*x = ZipEsateIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipEsateIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipEsateIdRequest) ProtoMessage() {}

func (x *ZipEsateIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipEsateIdRequest.ProtoReflect.Descriptor instead.
func (*ZipEsateIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{19}
}

func (x *ZipEsateIdRequest) GetEstateId() string {
	if x != nil {
		return x.EstateId
	}
	return ""
}

type ZipEstateIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zips []*Zip `protobuf:"bytes,1,rep,name=Zips,proto3" json:"Zips,omitempty"`
}

func (x *ZipEstateIdResponse) Reset() {
	*x = ZipEstateIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zip_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipEstateIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipEstateIdResponse) ProtoMessage() {}

func (x *ZipEstateIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zip_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipEstateIdResponse.ProtoReflect.Descriptor instead.
func (*ZipEstateIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_zip_proto_rawDescGZIP(), []int{20}
}

func (x *ZipEstateIdResponse) GetZips() []*Zip {
	if x != nil {
		return x.Zips
	}
	return nil
}

var File_proto_zip_proto protoreflect.FileDescriptor

var file_proto_zip_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x04, 0x0a, 0x03, 0x5a, 0x69, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x6d, 0x32,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22, 0x1e, 0x0a, 0x0c, 0x5a, 0x69, 0x70, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc9, 0x04, 0x0a, 0x0d, 0x5a, 0x69, 0x70,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x6d, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77,
	0x59, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x69, 0x6c, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x22, 0x0f, 0x0a, 0x0d, 0x5a, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x0e, 0x5a, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69,
	0x70, 0x52, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x53, 0x68,
	0x6f, 0x77, 0x59, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x12,
	0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x52, 0x04, 0x5a, 0x69,
	0x70, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f,
	0x77, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x5a,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x7a, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x5a, 0x69, 0x70, 0x52, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x5a,
	0x69, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x5a, 0x69,
	0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x52, 0x04, 0x5a, 0x69, 0x70, 0x73,
	0x22, 0xbc, 0x04, 0x0a, 0x10, 0x5a, 0x69, 0x70, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22,
	0xcd, 0x04, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22,
	0xcc, 0x04, 0x0a, 0x10, 0x5a, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22, 0xcd,
	0x04, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x02, 0x6d, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22, 0x22,
	0x0a, 0x10, 0x5a, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x7e, 0x0a, 0x10, 0x5a, 0x69, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x33, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70,
	0x52, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x22, 0x2f, 0x0a, 0x11, 0x5a, 0x69, 0x70, 0x45, 0x73, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x5a, 0x69, 0x70, 0x45, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x7a,
	0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x52, 0x04, 0x5a, 0x69, 0x70, 0x73, 0x32, 0x8b,
	0x07, 0x0a, 0x0f, 0x5a, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x5a, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x13, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69,
	0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x49, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x5a, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x12, 0x14,
	0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x12, 0x5d, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x18, 0x2e,
	0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e,
	0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x7a, 0x69, 0x70, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x59, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x12, 0x17, 0x2e, 0x7a, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70,
	0x53, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f,
	0x73, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x12, 0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x5a, 0x69, 0x70,
	0x42, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e,
	0x5a, 0x69, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x12, 0x69, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x5a, 0x69, 0x70, 0x42, 0x79, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x45, 0x73, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x7a, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x5a, 0x69, 0x70, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x7d, 0x12, 0x50, 0x0a, 0x07, 0x53, 0x61, 0x76, 0x65,
	0x5a, 0x69, 0x70, 0x12, 0x17, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x7a,
	0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x3a, 0x01,
	0x2a, 0x22, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x12, 0x52, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5a, 0x69, 0x70, 0x12, 0x17, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e,
	0x5a, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x3a, 0x01, 0x2a, 0x1a, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x12, 0x54,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x69, 0x70, 0x12, 0x17, 0x2e, 0x7a, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x56, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5a, 0x69,
	0x70, 0x12, 0x17, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x7a, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76,
	0x31, 0x2f, 0x7a, 0x69, 0x70, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x67, 0x0a, 0x0a,
	0x6a, 0x61, 0x76, 0x61, 0x2e, 0x7a, 0x69, 0x70, 0x70, 0x62, 0x42, 0x08, 0x5a, 0x69, 0x70, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x00, 0x5a, 0x1b, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x77, 0x61, 0x66, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x5a, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x5a, 0x69, 0x70, 0x70,
	0x62, 0xca, 0x02, 0x05, 0x5a, 0x69, 0x70, 0x70, 0x62, 0xe2, 0x02, 0x11, 0x5a, 0x69, 0x70, 0x70,
	0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05,
	0x5a, 0x69, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_zip_proto_rawDescOnce sync.Once
	file_proto_zip_proto_rawDescData = file_proto_zip_proto_rawDesc
)

func file_proto_zip_proto_rawDescGZIP() []byte {
	file_proto_zip_proto_rawDescOnce.Do(func() {
		file_proto_zip_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_zip_proto_rawDescData)
	})
	return file_proto_zip_proto_rawDescData
}

var file_proto_zip_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_zip_proto_goTypes = []interface{}{
	(*Zip)(nil),                 // 0: zippb.Zip
	(*ZipIdRequest)(nil),        // 1: zippb.ZipIdRequest
	(*ZipIdResponse)(nil),       // 2: zippb.ZipIdResponse
	(*ZipAllRequest)(nil),       // 3: zippb.ZipAllRequest
	(*ZipAllResponse)(nil),      // 4: zippb.ZipAllResponse
	(*ZipShowYesRequest)(nil),   // 5: zippb.ZipShowYesRequest
	(*ZipShowYesResponse)(nil),  // 6: zippb.ZipShowYesResponse
	(*ZipShowNoRequest)(nil),    // 7: zippb.ZipShowNoRequest
	(*ZipShowNoResponse)(nil),   // 8: zippb.ZipShowNoResponse
	(*ZipAgentIdRequest)(nil),   // 9: zippb.ZipAgentIdRequest
	(*ZipAgentIdResponse)(nil),  // 10: zippb.ZipAgentIdResponse
	(*ZipInsertRequest)(nil),    // 11: zippb.ZipInsertRequest
	(*ZipInsertResponse)(nil),   // 12: zippb.ZipInsertResponse
	(*ZipUpdateRequest)(nil),    // 13: zippb.ZipUpdateRequest
	(*ZipUpdateResponse)(nil),   // 14: zippb.ZipUpdateResponse
	(*ZipDeleteRequest)(nil),    // 15: zippb.ZipDeleteRequest
	(*ZipDeleteResponse)(nil),   // 16: zippb.ZipDeleteResponse
	(*ZipSearchRequest)(nil),    // 17: zippb.ZipSearchRequest
	(*ZipSearchResponse)(nil),   // 18: zippb.ZipSearchResponse
	(*ZipEsateIdRequest)(nil),   // 19: zippb.ZipEsateIdRequest
	(*ZipEstateIdResponse)(nil), // 20: zippb.ZipEstateIdResponse
}
var file_proto_zip_proto_depIdxs = []int32{
	0,  // 0: zippb.ZipAllResponse.Zips:type_name -> zippb.Zip
	0,  // 1: zippb.ZipShowYesResponse.Zips:type_name -> zippb.Zip
	0,  // 2: zippb.ZipShowNoResponse.Zips:type_name -> zippb.Zip
	0,  // 3: zippb.ZipAgentIdResponse.Zips:type_name -> zippb.Zip
	0,  // 4: zippb.ZipSearchResponse.Zips:type_name -> zippb.Zip
	0,  // 5: zippb.ZipEstateIdResponse.Zips:type_name -> zippb.Zip
	1,  // 6: zippb.ZipProtoService.GetZipInfo:input_type -> zippb.ZipIdRequest
	3,  // 7: zippb.ZipProtoService.GetZipAll:input_type -> zippb.ZipAllRequest
	5,  // 8: zippb.ZipProtoService.GetZipShowYes:input_type -> zippb.ZipShowYesRequest
	7,  // 9: zippb.ZipProtoService.GetZipShowNo:input_type -> zippb.ZipShowNoRequest
	9,  // 10: zippb.ZipProtoService.GetZipByAgent:input_type -> zippb.ZipAgentIdRequest
	19, // 11: zippb.ZipProtoService.GetZipByEstate:input_type -> zippb.ZipEsateIdRequest
	11, // 12: zippb.ZipProtoService.SaveZip:input_type -> zippb.ZipInsertRequest
	13, // 13: zippb.ZipProtoService.UpdateZip:input_type -> zippb.ZipUpdateRequest
	15, // 14: zippb.ZipProtoService.DeleteZip:input_type -> zippb.ZipDeleteRequest
	17, // 15: zippb.ZipProtoService.SearchZip:input_type -> zippb.ZipSearchRequest
	2,  // 16: zippb.ZipProtoService.GetZipInfo:output_type -> zippb.ZipIdResponse
	4,  // 17: zippb.ZipProtoService.GetZipAll:output_type -> zippb.ZipAllResponse
	6,  // 18: zippb.ZipProtoService.GetZipShowYes:output_type -> zippb.ZipShowYesResponse
	8,  // 19: zippb.ZipProtoService.GetZipShowNo:output_type -> zippb.ZipShowNoResponse
	10, // 20: zippb.ZipProtoService.GetZipByAgent:output_type -> zippb.ZipAgentIdResponse
	20, // 21: zippb.ZipProtoService.GetZipByEstate:output_type -> zippb.ZipEstateIdResponse
	12, // 22: zippb.ZipProtoService.SaveZip:output_type -> zippb.ZipInsertResponse
	14, // 23: zippb.ZipProtoService.UpdateZip:output_type -> zippb.ZipUpdateResponse
	16, // 24: zippb.ZipProtoService.DeleteZip:output_type -> zippb.ZipDeleteResponse
	18, // 25: zippb.ZipProtoService.SearchZip:output_type -> zippb.ZipSearchResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_zip_proto_init() }
func file_proto_zip_proto_init() {
	if File_proto_zip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_zip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipShowYesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipShowYesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipShowNoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipShowNoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipAgentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipAgentIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipInsertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipInsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipEsateIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zip_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipEstateIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_zip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_zip_proto_goTypes,
		DependencyIndexes: file_proto_zip_proto_depIdxs,
		MessageInfos:      file_proto_zip_proto_msgTypes,
	}.Build()
	File_proto_zip_proto = out.File
	file_proto_zip_proto_rawDesc = nil
	file_proto_zip_proto_goTypes = nil
	file_proto_zip_proto_depIdxs = nil
}
